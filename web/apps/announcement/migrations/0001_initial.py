# Generated by Django 4.2.1 on 2023-05-25 15:40

import apps.announcement.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Announcement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("price", models.CharField(max_length=255)),
                ("status", models.CharField(max_length=50)),
                ("note", models.TextField(null=True)),
                ("publication_date", models.DateTimeField()),
                ("is_published", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["-publication_date"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("media_type", models.CharField(choices=[("PHOTO", "Photo"), ("VIDEO", "Video")], max_length=20)),
                ("file", models.FileField(upload_to=apps.announcement.models.content_file_name)),
                (
                    "announcement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="announcement.announcement",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="announcement",
            name="tags",
            field=models.ManyToManyField(related_name="announcements", to="announcement.tag"),
        ),
    ]
